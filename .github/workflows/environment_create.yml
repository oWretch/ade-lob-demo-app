# Cloned from https://github.com/Azure-Samples/deployment-environments-cicd-tutorial/blob/main/.github/workflows/environment_create.yml
name: Create Environment

permissions:
  id-token: write
  contents: read

on:
  create:
  pull_request:
    types: [opened, reopened]

concurrency: ${{ github.event.number || github.ref_name }}

jobs:
  config:
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    name: Get Configuration
    uses: ./.github/workflows/environment_config.yml

  create_env:
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    name: Create ${{ needs.config.outputs.type }} Environment
    runs-on: ubuntu-latest

    needs: config
    environment: ${{ needs.config.outputs.type }}

    env:
      ENVIRONMENT_NAME: ${{ needs.config.outputs.name }}
      ENVIRONMENT_TYPE: ${{ needs.config.outputs.type }}

    steps:
      - uses: actions/checkout@v4

      - name: Install DevCenter CLI Extension
        run: az extension add --name devcenter --upgrade

      - name: Export version
        id: version
        run: |
          echo "version=${{ env.version }}" >> $GITHUB_OUTPUT

      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/docker-login@v2
        with:
          login-server: globalazure2025nz-crbne5f9a2cufug9.azurecr.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: app
          push: true
          tags: globalazure2025nz-crbne5f9a2cufug9.azurecr.io/lob-app:${{ steps.run_tests.outputs.version }}

      - name: Create Environment
        run: |
          az devcenter dev environment create \
              --name ${{ env.ENVIRONMENT_NAME }} --environment-type ${{ env.ENVIRONMENT_TYPE }} \
              --dev-center ${{ vars.AZURE_DEVCENTER }} --project ${{ vars.AZURE_PROJECT }} \
              --catalog-name ${{ vars.AZURE_CATALOG }} --environment-definition-name ${{ vars.AZURE_CATALOG_ITEM }} \
              --parameters '{ "name": "${{ env.ENVIRONMENT_NAME }}", "app_version": "${{ steps.run_tests.outputs.version }}", "greeting": "Hello from event ${{ github.event_name }}" }' --only-show-errors

      - name: Get Resource Group
        shell: bash {0}
        run: |
          environment_rg=$(az devcenter dev environment show --name ${{ env.ENVIRONMENT_NAME }} \
              --dev-center ${{ vars.AZURE_DEVCENTER }} --project ${{ vars.AZURE_PROJECT }} \
              --only-show-errors --query resourceGroupId --output tsv 2>&1)

          if [ $? -ne 0 ]; then
              echo "::error::az devcenter dev environment show command failed: $environment_rg"; exit 1
          fi

          environment_group=${environment_rg##*/}
          environment_sub=${environment_rg%/resourceGroups*}
          environment_sub=${environment_sub##*/}

          echo "ENVIRONMENT_GROUP=$environment_group" >> $GITHUB_ENV
          echo "ENVIRONMENT_SUB=$environment_sub" >> $GITHUB_ENV

          echo "- [View environment resources in the Azure portal](https://portal.azure.com/#@${{ vars.AZURE_TENANT_ID }}/resource$environment_rg)" >> $GITHUB_STEP_SUMMARY
          # echo "- [View the deployed app](https://${{ env.ENVIRONMENT_NAME }}.azurewebsites.net/api/time)" >> $GITHUB_STEP_SUMMARY
